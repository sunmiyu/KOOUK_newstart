-- ===============================================
-- KOOUK ÏàòÏ†ïÎêú ÏïàÏ†ÑÌïú Î∂ÑÏÑù ÌÖåÏù¥Î∏î Ï∂îÍ∞Ä
-- Í∏∞Ï°¥ user_usage ÌÖåÏù¥Î∏îÍ≥º Ï∂©Îèå Ìï¥Í≤∞
-- ===============================================

SELECT 'Starting fixed migration...' as status;

-- 1. content_metadata_stats Î∑∞ RLS ÏóêÎü¨Îßå Ìï¥Í≤∞
DROP VIEW IF EXISTS content_metadata_stats;
CREATE OR REPLACE VIEW content_metadata_stats AS
SELECT 
  metadata->>'platform' as platform,
  COUNT(*) as count,
  COUNT(CASE WHEN metadata->>'image' IS NOT NULL THEN 1 END) as with_thumbnail,
  AVG(CASE WHEN metadata->>'title' IS NOT NULL THEN LENGTH(metadata->>'title') END) as avg_title_length
FROM content_items 
WHERE metadata IS NOT NULL
GROUP BY metadata->>'platform'
ORDER BY count DESC;

-- RLS ÎπÑÌôúÏÑ±Ìôî (Î∑∞ÏóêÎäî RLS Ï†ÅÏö© ÏïàÌï®)
ALTER VIEW content_metadata_stats OWNER TO postgres;

-- 2. marketplace_analytics ÌÖåÏù¥Î∏îÎßå ÏÉàÎ°ú Ï∂îÍ∞Ä (user_usageÎäî Í±¥ÎìúÎ¶¨ÏßÄ ÏïäÏùå)
CREATE TABLE IF NOT EXISTS marketplace_analytics (
  id uuid PRIMARY KEY DEFAULT gen_random_uuid(),
  marketplace_folder_id uuid, -- Ïô∏ÎûòÌÇ§Îäî ÎÇòÏ§ëÏóê Ï∂îÍ∞Ä
  
  -- ÏùºÎ≥Ñ ÌÜµÍ≥Ñ
  date_tracked date DEFAULT CURRENT_DATE,
  
  -- ÌïµÏã¨ ÏßÄÌëú
  daily_views integer DEFAULT 0,
  daily_unique_views integer DEFAULT 0,
  daily_downloads integer DEFAULT 0,
  daily_likes integer DEFAULT 0,
  daily_unlikes integer DEFAULT 0,
  
  -- ÏÉÅÏÑ∏ Î∂ÑÏÑù
  average_view_duration_seconds integer DEFAULT 0,
  bounce_rate numeric(5,2) DEFAULT 0,
  
  -- ÏßÄÏó≠/ÏãúÍ∞Ñ Î∂ÑÏÑù (JSON)
  top_countries jsonb DEFAULT '{}',
  hourly_views jsonb DEFAULT '{}',
  
  -- Ï∂îÏ≤ú/Í≤ÄÏÉâ Í¥ÄÎ†®
  recommendation_clicks integer DEFAULT 0,
  search_impressions integer DEFAULT 0,
  
  -- Î©îÌÉÄÎç∞Ïù¥ÌÑ∞
  created_at timestamptz DEFAULT now(),
  updated_at timestamptz DEFAULT now(),
  
  -- Ïú†ÎãàÌÅ¨ Ï†úÏïΩ
  UNIQUE(marketplace_folder_id, date_tracked)
);

-- 3. Í∏∞Ï°¥ user_usage ÌÖåÏù¥Î∏îÏóê ÏóÜÎäî Ïª¨ÎüºÎì§Îßå ÏïàÏ†ÑÌïòÍ≤å Ï∂îÍ∞Ä
DO $$
BEGIN
  -- limits Ïª¨Îüº Ï∂îÍ∞Ä (JSONÏúºÎ°ú Ï†úÌïú Ï†ïÎ≥¥ Ï†ÄÏû•)
  IF NOT EXISTS (
    SELECT 1 FROM information_schema.columns 
    WHERE table_name = 'user_usage' AND column_name = 'limits'
  ) THEN
    ALTER TABLE user_usage ADD COLUMN limits jsonb DEFAULT '{
      "storage_limit_gb": 1,
      "max_folders": 20,
      "max_items_per_folder": 500,
      "max_marketplace_folders": 5
    }';
    RAISE NOTICE '‚úÖ user_usage.limits Ïª¨Îüº Ï∂îÍ∞ÄÎê®';
  ELSE
    RAISE NOTICE '‚úÖ user_usage.limits Ïª¨Îüº Ïù¥ÎØ∏ Ï°¥Ïû¨';
  END IF;

  -- last_calculated_at Ïª¨Îüº Ï∂îÍ∞Ä
  IF NOT EXISTS (
    SELECT 1 FROM information_schema.columns 
    WHERE table_name = 'user_usage' AND column_name = 'last_calculated_at'
  ) THEN
    ALTER TABLE user_usage ADD COLUMN last_calculated_at timestamptz DEFAULT now();
    RAISE NOTICE '‚úÖ user_usage.last_calculated_at Ïª¨Îüº Ï∂îÍ∞ÄÎê®';
  ELSE
    RAISE NOTICE '‚úÖ user_usage.last_calculated_at Ïª¨Îüº Ïù¥ÎØ∏ Ï°¥Ïû¨';
  END IF;
END $$;

-- 4. Í∏∞Ï°¥ user_usage ÌÖåÏù¥Î∏î ÏóÖÎç∞Ïù¥Ìä∏ Ìï®Ïàò (Í∏∞Ï°¥ Íµ¨Ï°∞ ÌôúÏö©)
CREATE OR REPLACE FUNCTION refresh_user_usage(target_user_id uuid)
RETURNS jsonb AS $$
DECLARE
  storage_mb bigint := 0;
  folder_count integer := 0;
  bookmark_count integer := 0;
  marketplace_count integer := 0;
  current_plan text := 'free';
  plan_limits jsonb;
  result jsonb;
BEGIN
  -- ÌòÑÏû¨ ÌîåÎûú ÌôïÏù∏ (Í∏∞Ï°¥ ÌÖåÏù¥Î∏îÏóêÏÑú)
  SELECT COALESCE(plan, 'free') INTO current_plan
  FROM user_usage 
  WHERE user_id = target_user_id;
  
  -- ÌîåÎûúÎ≥Ñ Ï†úÌïú ÏÑ§Ï†ï
  IF current_plan = 'pro' THEN
    plan_limits := '{"storage_limit_gb": 10, "max_folders": 50, "max_items_per_folder": 500, "max_marketplace_folders": 25}';
  ELSE
    plan_limits := '{"storage_limit_gb": 1, "max_folders": 20, "max_items_per_folder": 500, "max_marketplace_folders": 5}';
  END IF;
  
  -- Ïã§Ï†ú ÏÇ¨Ïö©Îüâ Í≥ÑÏÇ∞
  SELECT COUNT(*) INTO folder_count FROM folders WHERE user_id = target_user_id;
  SELECT COUNT(*) INTO bookmark_count FROM bookmarks WHERE user_id = target_user_id;
  
  -- marketplace Ìè¥Îçî Í≥ÑÏÇ∞ (Ïñ¥Îñ§ ÌÖåÏù¥Î∏îÏù¥Îì† ÏÇ¨Ïö© Í∞ÄÎä•)
  SELECT COUNT(*) INTO marketplace_count 
  FROM marketplace_folders 
  WHERE user_id = target_user_id AND COALESCE(is_active, true) = true;
  
  -- Í∞ÑÎã®Ìïú Ï†ÄÏû•Í≥µÍ∞Ñ Í≥ÑÏÇ∞
  storage_mb := (folder_count * 10) + (bookmark_count * 5);
  
  -- Í∏∞Ï°¥ user_usage ÌÖåÏù¥Î∏î ÏóÖÎç∞Ïù¥Ìä∏
  UPDATE user_usage SET
    current_storage_mb = storage_mb,
    current_folders = folder_count,
    current_bookmarks = bookmark_count,
    current_marketplace_folders = marketplace_count,
    storage_usage_percent = LEAST(100, ROUND((storage_mb::numeric / (plan_limits->>'storage_limit_gb')::numeric / 1024) * 100)),
    folder_usage_percent = ROUND((folder_count::numeric / (plan_limits->>'max_folders')::numeric) * 100),
    marketplace_usage_percent = ROUND((marketplace_count::numeric / (plan_limits->>'max_marketplace_folders')::numeric) * 100),
    is_storage_warning = storage_mb > (plan_limits->>'storage_limit_gb')::numeric * 1024 * 0.9,
    is_storage_full = storage_mb >= (plan_limits->>'storage_limit_gb')::numeric * 1024,
    is_folders_full = folder_count >= (plan_limits->>'max_folders')::numeric,
    limits = plan_limits,
    last_calculated_at = now(),
    updated_at = now()
  WHERE user_id = target_user_id;
  
  -- Î†àÏΩîÎìúÍ∞Ä ÏóÜÏúºÎ©¥ ÏÉùÏÑ±
  INSERT INTO user_usage (user_id, plan, limits)
  VALUES (target_user_id, current_plan, plan_limits)
  ON CONFLICT (user_id) DO NOTHING;
  
  -- Í≤∞Í≥º Î∞òÌôò
  SELECT to_jsonb(user_usage.*) INTO result
  FROM user_usage 
  WHERE user_id = target_user_id;
  
  RETURN result;
END;
$$ LANGUAGE plpgsql SECURITY DEFINER;

-- 5. ÎßàÏºìÌîåÎ†àÏù¥Ïä§ Î∂ÑÏÑù Ìï®Ïàò
CREATE OR REPLACE FUNCTION track_marketplace_action(
  folder_id uuid,
  action_type text,
  user_country text DEFAULT 'KR'
)
RETURNS void AS $$
BEGIN
  INSERT INTO marketplace_analytics (
    marketplace_folder_id, date_tracked,
    daily_views, daily_downloads, daily_likes
  ) VALUES (
    folder_id, CURRENT_DATE,
    CASE WHEN action_type = 'view' THEN 1 ELSE 0 END,
    CASE WHEN action_type = 'download' THEN 1 ELSE 0 END,
    CASE WHEN action_type = 'like' THEN 1 ELSE 0 END
  )
  ON CONFLICT (marketplace_folder_id, date_tracked) DO UPDATE SET
    daily_views = marketplace_analytics.daily_views + 
      CASE WHEN action_type = 'view' THEN 1 ELSE 0 END,
    daily_downloads = marketplace_analytics.daily_downloads + 
      CASE WHEN action_type = 'download' THEN 1 ELSE 0 END,
    daily_likes = marketplace_analytics.daily_likes + 
      CASE WHEN action_type = 'like' THEN 1 ELSE 0 END,
    updated_at = now();
END;
$$ LANGUAGE plpgsql SECURITY DEFINER;

-- 6. RLS ÏÑ§Ï†ï
ALTER TABLE marketplace_analytics ENABLE ROW LEVEL SECURITY;

CREATE POLICY "marketplace_analytics_select_all" ON marketplace_analytics
  FOR SELECT USING (true);

CREATE POLICY "marketplace_analytics_insert_system" ON marketplace_analytics
  FOR INSERT WITH CHECK (true);

CREATE POLICY "marketplace_analytics_update_system" ON marketplace_analytics
  FOR UPDATE USING (true);

-- 7. Ïù∏Îç±Ïä§ Ï∂îÍ∞Ä
CREATE INDEX IF NOT EXISTS idx_marketplace_analytics_folder_date 
ON marketplace_analytics(marketplace_folder_id, date_tracked);

CREATE INDEX IF NOT EXISTS idx_marketplace_analytics_date 
ON marketplace_analytics(date_tracked);

-- 8. ÏôÑÎ£å ÌôïÏù∏
SELECT 
  'marketplace_analytics' as table_name,
  COUNT(*) as record_count
FROM marketplace_analytics;

SELECT 'üéâ Fixed Analytics Migration ÏôÑÎ£å!' as message;